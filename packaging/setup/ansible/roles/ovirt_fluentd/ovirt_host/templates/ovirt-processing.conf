<filter {{ collectd_write_http_path }}>
  @type record_transformer
  <record>
    timestamp ${time}
  </record>
</filter>

#Add to all tag metrics the collectd plugin name
<match {{ collectd_write_http_path }}>
  @type rewrite_tag_filter
  rewriterule1 plugin ^(\w+\S+) ${tag}.$1
</match>

#Statsd Plugin

<match {{ collectd_write_http_path }}.statsd>
  @type rewrite_tag_filter
  rewriterule1 type_instance ^(\w+\S+) ${tag}.$1
</match>

<filter {{ collectd_write_http_path }}.statsd.vms.*.{nic,disk}.**>
  @type record_transformer
  enable_ruby
  <record>
    plugin_instance ${type_instance.split(".")[1]}
    type vm_${type_instance.split(".")[2]}_${type_instance.split(".")[4]}
    type_instance ${type_instance.split(".")[3]}
  </record>
</filter>

<filter {{ collectd_write_http_path }}.statsd.vms.*.{balloon,cpu}.**>
  @type record_transformer
  enable_ruby
  <record>
    plugin_instance ${type_instance.split(".")[1]}
    type vm_${type_instance.split(".")[2]}_${type_instance.split(".")[3]}
    type_instance ""
  </record>
</filter>

<filter {{ collectd_write_http_path }}.statsd.hosts.{memory,cpu,swap,vms,storage,vdsm}.**>
  @type record_transformer
  enable_ruby
  <record>
    type host_${type_instance.split(".")[1]}
    type_instance ${type_instance.split(".")[2]}
  </record>
</filter>

<filter {{ collectd_write_http_path }}.statsd.hosts.elapsed_time>
  @type record_transformer
  enable_ruby
  <record>
    type host_${type_instance.split(".")[1]}
    type_instance ""
  </record>
</filter>

<filter {{ collectd_write_http_path }}.statsd.hosts.nic.*.*.*>
  @type record_transformer
  enable_ruby
  <record>
    type host_${type_instance.split(".")[1]}_${type_instance.split(".")[4]}
    plugin_instance ${type_instance.split(".")[2]}_${type_instance.split(".")[3]}
    type_instance ""
  </record>
</filter>

<filter {{ collectd_write_http_path }}.statsd.hosts.{nic,disk}.*.*>
  @type record_transformer
  enable_ruby
  <record>
    type host_${type_instance.split(".")[1]}_${type_instance.split(".")[3]}
    plugin_instance ${type_instance.split(".")[2]}
    type_instance ""
  </record>
</filter>

#Transform to common Data Model

<match {{ collectd_write_http_path }}.**>
  @type collectd_nest
  add_tag_prefix nested
</match>

<filter nested.{{ collectd_write_http_path }}.statsd**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    tag project.ovirt-metrics-{{ ovirt_env_name }}
    hostname "#{Socket.gethostname}"
    ipaddr4 {{ ansible_default_ipv4.address }}
    ipaddr6 {{ ansible_default_ipv6.address }}
    ovirt {"entity":"${tag_parts[3]}","host_id":"{{ ovirt_vds_vds_id }}","engine_fqdn":"{{ ovirt_engine_fqdn }}"}
    # timestamp example: "timestamp":"2017-05-14 09:44:59 +0300" to iso8601 format
    time ${DateTime.strptime("${record['collectd']['timestamp']}", "%Y-%m-%d %H:%M:%S %z").iso8601}
    for_remove ${record["collectd"].delete("timestamp")}
  </record>
  remove_keys for_remove
</filter>

<match nested.{{ collectd_write_http_path }}.statsd.**>
  @type rewrite_tag_filter
  rewriterule1 tag ^(\w+\S+) $1
</match>

<filter nested.{{ collectd_write_http_path }}.virt>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    tag project.ovirt-metrics-{{ ovirt_env_name }}
    hostname "#{Socket.gethostname}"
    ipaddr4 {{ ansible_default_ipv4.address }}
    ipaddr6 {{ ansible_default_ipv6.address }}
    ovirt {"entity":"vms","host_id":"{{ ovirt_vds_vds_id }}","engine_fqdn":"{{ ovirt_engine_fqdn }}"}
    # time example: "timestamp":"2017-05-14 09:44:59 +0300" to iso8601 format
    time ${DateTime.strptime("${record['collectd']['timestamp']}", "%Y-%m-%d %H:%M:%S %z").iso8601}
    for_remove ${record["collectd"].delete("timestamp")}
  </record>
  remove_keys for_remove
</filter>

<match nested.{{ collectd_write_http_path }}.virt>
  @type rewrite_tag_filter
  rewriterule1 tag ^(\w+\S+) $1
</match>

<filter nested.{{ collectd_write_http_path }}.**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    tag project.ovirt-metrics-{{ ovirt_env_name }}
    hostname "#{Socket.gethostname}"
    ipaddr4 {{ ansible_default_ipv4.address }}
    ipaddr6 {{ ansible_default_ipv6.address }}
    ovirt {"entity":"hosts","host_id":"{{ ovirt_vds_vds_id }}","engine_fqdn":"{{ ovirt_engine_fqdn }}"}
    # timestamp example: "timestamp":"2017-05-14 09:44:59 +0300" to iso8601 format
    time ${DateTime.strptime("${record['collectd']['timestamp']}", "%Y-%m-%d %H:%M:%S %z").iso8601}
    for_remove ${record["collectd"].delete("timestamp")}
  </record>
  remove_keys for_remove
</filter>

<match nested.{{ collectd_write_http_path }}.**>
  @type rewrite_tag_filter
  rewriterule1 tag ^(\w+\S+) $1
</match>
